return {
	{
		"github/copilot.vim",
		event = { "BufReadPre", "BufNewFile" },
		keys = {
			{ "<c-j>", 'copilot#Accept("\\<CR>")', mode = "i", expr = true, replace_keycodes = false },
		},
		init = function()
			vim.g.copilot_no_tab_map = true
		end,
	},
	{
		"olimorris/codecompanion.nvim",
		cmd = { "CodeCompanionActions", "CodeCompanionChat" },
		opts = {
			adapters = {
				anthropic = function()
					return require("codecompanion.adapters").extend("anthropic", {
						env = {
							url = "https://api.anthropic.com",
							api_key = "{{ .ai.anthropic_api_key }}",
						},
					})
				end,
				ollama = function()
					return require("codecompanion.adapters").extend("ollama", {
						env = {
							url = "{{ .ai.ollama_url }}",
						},
						headers = {
							["Content-Type"] = "application/json",
						},
						parameters = {
							sync = true,
						},
					})
				end,
			},
			strategies = {
				chat = { adapter = "anthropic" },
				inline = { adapter = "anthropic" },
			},
		},
		dependencies = {
			"nvim-lua/plenary.nvim",
			"nvim-treesitter/nvim-treesitter",
			"ravitemer/mcphub.nvim",
		},
	},
}
